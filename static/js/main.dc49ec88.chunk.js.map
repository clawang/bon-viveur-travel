{"version":3,"sources":["ListMode.js","loadData.js","App.js","reportWebVitals.js","index.js"],"names":["ListMode","props","useState","image","setImage","className","data","map","category","i","Category","src","process","ScrollingBanner","title","name","items","item","Location","buildString","str","onMouseEnter","img","price","numToPrice","description","previous","loadData","rest","appState","callback","loading","hasOwnProperty","id","open","error","queries","term","latitude","lat","longitude","lng","sort_by","limit","apiUrl","axios","get","headers","Authorization","params","then","res","businesses","response","is_closed","rating","categories","location","display_address","display_phone","url","push","length","shift","catch","err","cityData","App","loaded","setAppState","city","setCity","setData","useEffect","sf","recommendations","onClick","fetchData","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dc49ec88.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nfunction ListMode(props) {\n\tconst [image, setImage] = useState(\"\");\n\n\treturn (\n\t\t<div className=\"city-wrapper\">\n\t\t\t<div className=\"city-content-wrapper\">\n\t\t\t\t{props.data.map((category, i) => <Category data={category} key={i} setImage={setImage} />)}\n\t\t\t</div>\n\t\t\t<div className=\"image-container\">\n\t\t\t\t{\n\t\t\t\t\timage ?\n\t\t\t\t\t\t<img src={process.env.PUBLIC_URL + image} />\n\t\t\t\t\t\t:\n\t\t\t\t\t\t<></>\n\t\t\t\t}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nfunction Category(props) {\n\treturn (\n\t\t<div className=\"category-wrapper\">\n\t\t\t<div className=\"category-title\">\n\t\t\t\t<ScrollingBanner title={props.data.name} />\n\t\t\t</div>\n\t\t\t<div className=\"locations-wrapper\">\n\t\t\t\t{props.data.items.map((item, i) => <Location data={item} key={i} setImage={props.setImage} />)}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nfunction ScrollingBanner(props) {\n\tconst buildString = () => {\n\t\tlet str = \"\";\n\t\tfor (let i = 0; i < 20; i++) {\n\t\t\tstr += props.title + \" ● \";\n\t\t}\n\t\treturn str;\n\t}\n\treturn (\n\t\t<div className=\"scrolling-banner-wrapper\">\n\t\t\t<div className=\"scrolling-banner-text\">\n\t\t\t\t<p>{buildString()}</p>\n\t\t\t\t<p>{buildString()}</p>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nfunction Location(props) {\n\n\tconst numToPrice = () => {\n\t\tlet str = \"\";\n\t\tfor (let i = 0; i < props.data.price; i++) {\n\t\t\tstr += \"$\";\n\t\t}\n\t\treturn str;\n\t}\n\n\treturn (\n\t\t<div className=\"location-wrapper\" onMouseEnter={() => props.setImage(props.data.img)}>\n\t\t\t<div className=\"location-title\">\n\t\t\t\t<h3>{props.data.name + (props.data.img ? \"⟶\" : \"\")}</h3>\n\t\t\t\t{props.data.price ?\n\t\t\t\t\t<p>{numToPrice()}</p>\n\t\t\t\t\t:\n\t\t\t\t\t<></>\n\t\t\t\t}\n\t\t\t</div>\n\t\t\t<p>{props.data.description}</p>\n\t\t</div>\n\t);\n}\n\nexport { ListMode };","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nlet data = {};\nlet previous = [];\n\nfunction loadData(rest, appState, callback) {\n\tcallback({...appState, loading: true});\n\tif(data.hasOwnProperty(rest.id)) {\n\t\t//console.log('called before');\n\t\tcallback({open: true, data: data[rest.id], rest: rest, loading: false, error: false});\n\t} else {\n\t\tconst queries = {\n\t\t\tterm: rest.name,\n\t\t\tlatitude: rest.lat,\n\t\t\tlongitude: rest.lng,\n\t\t\tsort_by: 'best_match',\n\t\t\tlimit: 1,\n\t\t};\n\t\t//console.log(queries);\n\t\tconst apiUrl = `${'https://tranquil-waters-09571.herokuapp.com/'}https://api.yelp.com/v3/businesses/search`;\n\t\taxios.get(apiUrl, {\n\t\t\theaders: {\n\t\t\t\tAuthorization: `Bearer ${process.env.REACT_APP_YELP_API_KEY}`\n\t\t\t},\n\t\t\tparams: queries\n\t\t})\n\t\t.then((res) => {\n\t\t\t//console.log(res.data.businesses[0]);\n\t\t\tlet obj = res.data.businesses || res.data;\n\t\t\tlet response = res.data.businesses[0];\n\t\t\tdata[rest.id] = {\n\t\t\t\tis_closed: response.is_closed,\n\t\t\t\tname: response.name,\n\t\t\t\tprice: response.price,\n\t\t\t\trating: response.rating,\n\t\t\t\tcategories: response.categories,\n\t\t\t\tlocation: {\n\t\t\t\t\tdisplay_address: response.location.display_address\n\t\t\t\t},\n\t\t\t\tdisplay_phone: response.display_phone,\n\t\t\t\turl: response.url\n\t\t\t};\n\t\t\tprevious.push(rest.id);\n\t\t\tif(previous.length > 50) {\n\t\t\t\tdelete data[previous[0]];\n\t\t\t\tprevious.shift();\n\t\t\t}\n\t\t\tcallback({open: true, data: res.data.businesses[0], rest: rest, loading: false, error: false});\n\t\t})\n\t\t.catch((err) => {\n\t\t\tcallback({...appState, error: true, loading: false, open: true});\n\t\t});\n\t}\n}\n\nexport default loadData;","import React, { useEffect, useState } from 'react';\nimport { ListMode } from './ListMode';\nimport loadData from './loadData';\nimport './style.scss';\nimport sf from './assets/sanfrancisco.json';\n\nconst cityData = [\n\t{\n\t\tname: 'New York City',\n\t},\n\t{\n\t\tname: 'San Francisco',\n\t}\n];\n\nfunction App() {\n\tconst [loaded, setLoaded] = useState(false);\n\tconst [appState, setAppState] = useState({\n\t\topen: false,\n\t\tloading: false,\n\t\terror: false,\n\t\tdata: {},\n\t\trest: {}\n\t});\n\tconst [city, setCity] = useState(1); //0 is nyc, 1 is sf\n\tconst [data, setData] = useState([]);\n\n\tuseEffect(() => {\n\t\t// if(city >= 0) csvJSON();\n\t\tswitch (city) {\n\t\t\tcase 1:\n\t\t\t\tsetData(sf.recommendations);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tsetData([]);\n\t\t\t\tbreak;\n\t\t}\n\n\t}, [city]);\n\n\tconst fetchData = (rest) => {\n\t\tloadData(rest, appState, setAppState);\n\t}\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t{city < 0 ?\n\t\t\t\t<div className=\"city-selection-wrapper\">\n\t\t\t\t\t<div className=\"city-selection\">\n\t\t\t\t\t\t<h1>Which city would you like to see?</h1>\n\t\t\t\t\t\t<p onClick={() => setCity(0)}>New York City</p>\n\t\t\t\t\t\t<p onClick={() => setCity(1)}>San Francisco</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t:\n\t\t\t\t<>\n\t\t\t\t\t<header className=\"App-header\">\n\t\t\t\t\t\t<h1 onClick={() => setCity(-1)}>BON VIVEUR</h1>\n\t\t\t\t\t\t<h2>{cityData[city].name}</h2>\n\t\t\t\t\t</header>\n\t\t\t\t\t<ListMode data={data} fetchData={fetchData} loaded={loaded} />\n\t\t\t\t</>\n\t\t\t}\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}